var search_data = {"index":{"searchIndex":["estado_naranjero","object","orange","morir()","new()","producirfruta()","recolectar_una()","uno_mas()","readme"],"longSearchIndex":["estado_naranjero","object","orange","orange#morir()","orange::new()","orange#producirfruta()","orange#recolectar_una()","orange#uno_mas()",""],"info":[["ESTADO_NARANJERO","","ESTADO_NARANJERO.html","","<p>Módulo representativo de los estados posibles del naranjero\n"],["Object","","Object.html","",""],["Orange","","Orange.html","","<p>Clase gestora del comportamiento del naranjero\n"],["morir","Orange","Orange.html#method-i-morir","()","<p>Cambia el estado del naranjero de vivo a muerto\n"],["new","Orange","Orange.html#method-c-new","(*args)","<p>Instancia un nuevo objeto de la clase Orange indicando el incremento de\naltura y la edad mínima a la …\n"],["producirFruta","Orange","Orange.html#method-i-producirFruta","()","<p>Devuelve una nueva cantidad de frutas a partir de la edad actual.\n"],["recolectar_una","Orange","Orange.html#method-i-recolectar_una","()","<p>Recoleta una naranja si es posible y devuelve un mensaje ligado al\nresultado.\n"],["uno_mas","Orange","Orange.html#method-i-uno_mas","()","<p>Incrementa la edad del naranjero en uno si es posible. En caso contrario,\nmata el naranjero.\n"],["README","","README_rdoc.html","","<p>Desarrollo de la gema Ruby: Orange\n<p>\n<p><img\nsrc=“https://coveralls.io/repos/alu0100511314/LPP_T_03_Orange/badge.png?branch=desarrollo”\n…\n"]]}}